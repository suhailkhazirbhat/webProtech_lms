{"ast":null,"code":"import axios from \"axios\";\nexport const getAllNoticeAction = () => async dispatch => {\n  dispatch({\n    type: 'GET_All_NOTICE_REQUEST'\n  });\n  try {\n    const response = await axios.get('http://localhost:5000/allnotice');\n    console.log(\"reas\", response);\n    dispatch({\n      type: 'GET_All_NOTICE_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_All_NOTICE_FAILED',\n      payload: error\n    });\n  }\n};\nexport const addNoticeAction = user => async dispatch => {\n  dispatch({\n    type: 'ADD_NOTICE_REQUEST'\n  });\n  try {\n    const res = await axios.post(\"http://localhost:5000/addnotice\", user);\n    dispatch({\n      type: 'ADD_NOTICE_SUCCESS',\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_NOTICE_FAILED',\n      payload: error\n    });\n  }\n};\nexport const getAllClubAction = () => async dispatch => {\n  dispatch({\n    type: 'GET_All_CLUB_REQUEST'\n  });\n  try {\n    const response = await axios.get('http://localhost:5000/allclub');\n    dispatch({\n      type: 'GET_All_CLUB_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_All_CLUB_FAILED',\n      payload: error\n    });\n  }\n};\nexport const getClubJoinIssAction = () => async dispatch => {\n  dispatch({\n    type: 'GET_CLUB_ISSUE_REQUEST'\n  });\n  try {\n    const response = await axios.get('http://localhost:5000/allissue');\n    dispatch({\n      type: 'GET_CLUB_ISSUE_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_CLUB_ISSUE_FAILED',\n      payload: error\n    });\n  }\n};\nexport const addClubAction = user => async dispatch => {\n  dispatch({\n    type: 'ADD_CLUB_REQUEST'\n  });\n  try {\n    const res = await axios.post(\"http://localhost:5000/addclub\", user);\n    dispatch({\n      type: 'ADD_CLUB_SUCCESS',\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_CLUB_FAILED',\n      payload: error\n    });\n  }\n};\nexport const addSubjectAction = user => async dispatch => {\n  dispatch({\n    type: 'ADD_SUBJECT_REQUEST'\n  });\n  try {\n    const res = await axios.post(\"http://localhost:5000/addSub\", user);\n    dispatch({\n      type: 'ADD_SUBJECT_SUCCESS',\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_SUBJECT_FAILED',\n      payload: error\n    });\n  }\n};\nexport const getAllSubAction = () => async dispatch => {\n  dispatch({\n    type: 'GET_All_SUBJECT_REQUEST'\n  });\n  try {\n    const response = await axios.get('http://localhost:5000/allSub');\n    console.log(\"reas\", response);\n    dispatch({\n      type: 'GET_All_SUBJECT_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_All_SUBJECT_FAILED',\n      payload: error\n    });\n  }\n};\nexport const acJoinRq = id => async dispatch => {\n  console.log(id);\n  try {\n    const res = await axios.post('http://localhost:5000/acjoinclub', {\n      id\n    });\n    const response = await axios.get('http://localhost:5000/allissue');\n    dispatch({\n      type: 'GET_CLUB_ISSUE_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_CLUB_ISSUE_FAILED',\n      payload: error\n    });\n  }\n};\nexport const reqToJoinClubAction = user => async dispatch => {\n  dispatch({\n    type: 'JOIN_CLUB_REQUEST'\n  });\n  console.log(user);\n  try {\n    const res = await axios.post(\"http://localhost:5000/joinclub\", user);\n    dispatch({\n      type: 'JOIN_CLUB_SUCCESS',\n      payload: res.data\n    });\n    const response = await axios.get('http://localhost:5000/allclub');\n    dispatch({\n      type: 'GET_All_CLUB_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'JOIN_CLUB_FAILED',\n      payload: error\n    });\n  }\n};\nexport const AcReqToJoinClubAction = user => async dispatch => {\n  dispatch({\n    type: 'ACJOIN_CLUB_REQUEST'\n  });\n  try {\n    const res = await axios.post(\"http://localhost:5000/acjoinclub\", user);\n    dispatch({\n      type: 'ACJOIN_CLUB_SUCCESS',\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ACJOIN_CLUB_FAILED',\n      payload: error\n    });\n  }\n};\nexport const getAllFaculty = () => async dispatch => {\n  dispatch({\n    type: 'GET_All_FACULTY_REQUEST'\n  });\n  try {\n    const response = await axios.get('http://localhost:5000/getAllFac');\n    console.log(\"reas\", response);\n    dispatch({\n      type: 'GET_All_FACULTY_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_All_FACULTY_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","getAllNoticeAction","dispatch","type","response","get","console","log","payload","data","error","addNoticeAction","user","res","post","getAllClubAction","getClubJoinIssAction","addClubAction","addSubjectAction","getAllSubAction","acJoinRq","id","reqToJoinClubAction","AcReqToJoinClubAction","getAllFaculty"],"sources":["C:/newLpmss/webProtech_lms/client/src/Attendance/actions/admin_action.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\n\r\nexport const getAllNoticeAction = ()=> async dispatch =>{\r\n    dispatch({\r\n        type:'GET_All_NOTICE_REQUEST'\r\n    })\r\n    try {\r\n        const response = await axios.get('http://localhost:5000/allnotice');\r\n        console.log(\"reas\",response)\r\n        dispatch({\r\n           type:'GET_All_NOTICE_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n       dispatch({\r\n           type:'GET_All_NOTICE_FAILED',\r\n           payload:error\r\n       })\r\n    }\r\n}\r\n\r\nexport const addNoticeAction = (user) => async dispatch => {\r\n    dispatch({\r\n        type: 'ADD_NOTICE_REQUEST'\r\n    })\r\n\r\n    try {\r\n        const res = await axios.post(\"http://localhost:5000/addnotice\", user);\r\n       \r\n        dispatch({\r\n            type: 'ADD_NOTICE_SUCCESS',\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'ADD_NOTICE_FAILED',\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllClubAction = ()=> async dispatch =>{\r\n    dispatch({\r\n        type:'GET_All_CLUB_REQUEST'\r\n    })\r\n    try {\r\n        const response = await axios.get('http://localhost:5000/allclub');\r\n        \r\n        dispatch({\r\n           type:'GET_All_CLUB_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n       dispatch({\r\n           type:'GET_All_CLUB_FAILED',\r\n           payload:error\r\n       })\r\n    }\r\n}\r\nexport const getClubJoinIssAction = ()=> async dispatch =>{\r\n    dispatch({\r\n        type:'GET_CLUB_ISSUE_REQUEST'\r\n    })\r\n    try {\r\n        const response = await axios.get('http://localhost:5000/allissue');\r\n        \r\n        dispatch({\r\n           type:'GET_CLUB_ISSUE_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n       dispatch({\r\n           type:'GET_CLUB_ISSUE_FAILED',\r\n           payload:error\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const addClubAction = (user) => async dispatch => {\r\n    dispatch({\r\n        type: 'ADD_CLUB_REQUEST'\r\n    })\r\n\r\n    try {\r\n        const res = await axios.post(\"http://localhost:5000/addclub\", user);\r\n       \r\n        dispatch({\r\n            type: 'ADD_CLUB_SUCCESS',\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'ADD_CLUB_FAILED',\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const addSubjectAction = (user) => async dispatch => {\r\n    dispatch({\r\n        type: 'ADD_SUBJECT_REQUEST'\r\n    })\r\n\r\n    try {\r\n        const res = await axios.post(\"http://localhost:5000/addSub\", user);\r\n       \r\n        dispatch({\r\n            type: 'ADD_SUBJECT_SUCCESS',\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'ADD_SUBJECT_FAILED',\r\n            payload: error\r\n        })\r\n    }\r\n}\r\nexport const getAllSubAction = ()=> async dispatch =>{\r\n    dispatch({\r\n        type:'GET_All_SUBJECT_REQUEST'\r\n    })\r\n    try {\r\n        const response = await axios.get('http://localhost:5000/allSub');\r\n        console.log(\"reas\",response)\r\n        dispatch({\r\n           type:'GET_All_SUBJECT_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n       dispatch({\r\n           type:'GET_All_SUBJECT_FAILED',\r\n           payload:error\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const acJoinRq = (id) => async dispatch => {\r\n    console.log(id)\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/acjoinclub',{id});\r\n        const response = await axios.get('http://localhost:5000/allissue');\r\n        \r\n        dispatch({\r\n           type:'GET_CLUB_ISSUE_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n       dispatch({\r\n           type:'GET_CLUB_ISSUE_FAILED',\r\n           payload:error\r\n       })\r\n    }\r\n       \r\n   \r\n}\r\n\r\nexport const reqToJoinClubAction = (user) => async dispatch => {\r\n    dispatch({\r\n        type: 'JOIN_CLUB_REQUEST'\r\n    })\r\n    console.log(user)\r\n    try {\r\n        const res = await axios.post(\"http://localhost:5000/joinclub\", user);\r\n       \r\n        dispatch({\r\n            type: 'JOIN_CLUB_SUCCESS',\r\n            payload:res.data\r\n        })\r\n        const response = await axios.get('http://localhost:5000/allclub');\r\n        \r\n        dispatch({\r\n           type:'GET_All_CLUB_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'JOIN_CLUB_FAILED',\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const AcReqToJoinClubAction = (user) => async dispatch => {\r\n    dispatch({\r\n        type: 'ACJOIN_CLUB_REQUEST'\r\n    })\r\n\r\n    try {\r\n        const res = await axios.post(\"http://localhost:5000/acjoinclub\", user);\r\n       \r\n        dispatch({\r\n            type: 'ACJOIN_CLUB_SUCCESS',\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'ACJOIN_CLUB_FAILED',\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllFaculty = ()=> async dispatch =>{\r\n    dispatch({\r\n        type:'GET_All_FACULTY_REQUEST'\r\n    })\r\n    try {\r\n        const response = await axios.get('http://localhost:5000/getAllFac');\r\n        console.log(\"reas\",response)\r\n        dispatch({\r\n           type:'GET_All_FACULTY_SUCCESS',\r\n           payload:response.data\r\n       })\r\n    } catch (error) {\r\n       dispatch({\r\n           type:'GET_All_FACULTY_FAILED',\r\n           payload:error\r\n       })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}