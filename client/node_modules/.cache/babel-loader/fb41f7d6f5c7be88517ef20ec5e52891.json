{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DISPLAY = exports.DISPLAY = {\n  NONE: 1 << 0,\n  BLOCK: 1 << 1,\n  INLINE: 1 << 2,\n  RUN_IN: 1 << 3,\n  FLOW: 1 << 4,\n  FLOW_ROOT: 1 << 5,\n  TABLE: 1 << 6,\n  FLEX: 1 << 7,\n  GRID: 1 << 8,\n  RUBY: 1 << 9,\n  SUBGRID: 1 << 10,\n  LIST_ITEM: 1 << 11,\n  TABLE_ROW_GROUP: 1 << 12,\n  TABLE_HEADER_GROUP: 1 << 13,\n  TABLE_FOOTER_GROUP: 1 << 14,\n  TABLE_ROW: 1 << 15,\n  TABLE_CELL: 1 << 16,\n  TABLE_COLUMN_GROUP: 1 << 17,\n  TABLE_COLUMN: 1 << 18,\n  TABLE_CAPTION: 1 << 19,\n  RUBY_BASE: 1 << 20,\n  RUBY_TEXT: 1 << 21,\n  RUBY_BASE_CONTAINER: 1 << 22,\n  RUBY_TEXT_CONTAINER: 1 << 23,\n  CONTENTS: 1 << 24,\n  INLINE_BLOCK: 1 << 25,\n  INLINE_LIST_ITEM: 1 << 26,\n  INLINE_TABLE: 1 << 27,\n  INLINE_FLEX: 1 << 28,\n  INLINE_GRID: 1 << 29\n};\nvar parseDisplayValue = function parseDisplayValue(display) {\n  switch (display) {\n    case 'block':\n      return DISPLAY.BLOCK;\n    case 'inline':\n      return DISPLAY.INLINE;\n    case 'run-in':\n      return DISPLAY.RUN_IN;\n    case 'flow':\n      return DISPLAY.FLOW;\n    case 'flow-root':\n      return DISPLAY.FLOW_ROOT;\n    case 'table':\n      return DISPLAY.TABLE;\n    case 'flex':\n      return DISPLAY.FLEX;\n    case 'grid':\n      return DISPLAY.GRID;\n    case 'ruby':\n      return DISPLAY.RUBY;\n    case 'subgrid':\n      return DISPLAY.SUBGRID;\n    case 'list-item':\n      return DISPLAY.LIST_ITEM;\n    case 'table-row-group':\n      return DISPLAY.TABLE_ROW_GROUP;\n    case 'table-header-group':\n      return DISPLAY.TABLE_HEADER_GROUP;\n    case 'table-footer-group':\n      return DISPLAY.TABLE_FOOTER_GROUP;\n    case 'table-row':\n      return DISPLAY.TABLE_ROW;\n    case 'table-cell':\n      return DISPLAY.TABLE_CELL;\n    case 'table-column-group':\n      return DISPLAY.TABLE_COLUMN_GROUP;\n    case 'table-column':\n      return DISPLAY.TABLE_COLUMN;\n    case 'table-caption':\n      return DISPLAY.TABLE_CAPTION;\n    case 'ruby-base':\n      return DISPLAY.RUBY_BASE;\n    case 'ruby-text':\n      return DISPLAY.RUBY_TEXT;\n    case 'ruby-base-container':\n      return DISPLAY.RUBY_BASE_CONTAINER;\n    case 'ruby-text-container':\n      return DISPLAY.RUBY_TEXT_CONTAINER;\n    case 'contents':\n      return DISPLAY.CONTENTS;\n    case 'inline-block':\n      return DISPLAY.INLINE_BLOCK;\n    case 'inline-list-item':\n      return DISPLAY.INLINE_LIST_ITEM;\n    case 'inline-table':\n      return DISPLAY.INLINE_TABLE;\n    case 'inline-flex':\n      return DISPLAY.INLINE_FLEX;\n    case 'inline-grid':\n      return DISPLAY.INLINE_GRID;\n  }\n  return DISPLAY.NONE;\n};\nvar setDisplayBit = function setDisplayBit(bit, display) {\n  return bit | parseDisplayValue(display);\n};\nvar parseDisplay = exports.parseDisplay = function parseDisplay(display) {\n  return display.split(' ').reduce(setDisplayBit, 0);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","DISPLAY","NONE","BLOCK","INLINE","RUN_IN","FLOW","FLOW_ROOT","TABLE","FLEX","GRID","RUBY","SUBGRID","LIST_ITEM","TABLE_ROW_GROUP","TABLE_HEADER_GROUP","TABLE_FOOTER_GROUP","TABLE_ROW","TABLE_CELL","TABLE_COLUMN_GROUP","TABLE_COLUMN","TABLE_CAPTION","RUBY_BASE","RUBY_TEXT","RUBY_BASE_CONTAINER","RUBY_TEXT_CONTAINER","CONTENTS","INLINE_BLOCK","INLINE_LIST_ITEM","INLINE_TABLE","INLINE_FLEX","INLINE_GRID","parseDisplayValue","display","setDisplayBit","bit","parseDisplay","split","reduce"],"sources":["C:/newLpmss/webProtech_lms/client/node_modules/html2canvas/dist/npm/parsing/display.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar DISPLAY = exports.DISPLAY = {\n    NONE: 1 << 0,\n    BLOCK: 1 << 1,\n    INLINE: 1 << 2,\n    RUN_IN: 1 << 3,\n    FLOW: 1 << 4,\n    FLOW_ROOT: 1 << 5,\n    TABLE: 1 << 6,\n    FLEX: 1 << 7,\n    GRID: 1 << 8,\n    RUBY: 1 << 9,\n    SUBGRID: 1 << 10,\n    LIST_ITEM: 1 << 11,\n    TABLE_ROW_GROUP: 1 << 12,\n    TABLE_HEADER_GROUP: 1 << 13,\n    TABLE_FOOTER_GROUP: 1 << 14,\n    TABLE_ROW: 1 << 15,\n    TABLE_CELL: 1 << 16,\n    TABLE_COLUMN_GROUP: 1 << 17,\n    TABLE_COLUMN: 1 << 18,\n    TABLE_CAPTION: 1 << 19,\n    RUBY_BASE: 1 << 20,\n    RUBY_TEXT: 1 << 21,\n    RUBY_BASE_CONTAINER: 1 << 22,\n    RUBY_TEXT_CONTAINER: 1 << 23,\n    CONTENTS: 1 << 24,\n    INLINE_BLOCK: 1 << 25,\n    INLINE_LIST_ITEM: 1 << 26,\n    INLINE_TABLE: 1 << 27,\n    INLINE_FLEX: 1 << 28,\n    INLINE_GRID: 1 << 29\n};\n\nvar parseDisplayValue = function parseDisplayValue(display) {\n    switch (display) {\n        case 'block':\n            return DISPLAY.BLOCK;\n        case 'inline':\n            return DISPLAY.INLINE;\n        case 'run-in':\n            return DISPLAY.RUN_IN;\n        case 'flow':\n            return DISPLAY.FLOW;\n        case 'flow-root':\n            return DISPLAY.FLOW_ROOT;\n        case 'table':\n            return DISPLAY.TABLE;\n        case 'flex':\n            return DISPLAY.FLEX;\n        case 'grid':\n            return DISPLAY.GRID;\n        case 'ruby':\n            return DISPLAY.RUBY;\n        case 'subgrid':\n            return DISPLAY.SUBGRID;\n        case 'list-item':\n            return DISPLAY.LIST_ITEM;\n        case 'table-row-group':\n            return DISPLAY.TABLE_ROW_GROUP;\n        case 'table-header-group':\n            return DISPLAY.TABLE_HEADER_GROUP;\n        case 'table-footer-group':\n            return DISPLAY.TABLE_FOOTER_GROUP;\n        case 'table-row':\n            return DISPLAY.TABLE_ROW;\n        case 'table-cell':\n            return DISPLAY.TABLE_CELL;\n        case 'table-column-group':\n            return DISPLAY.TABLE_COLUMN_GROUP;\n        case 'table-column':\n            return DISPLAY.TABLE_COLUMN;\n        case 'table-caption':\n            return DISPLAY.TABLE_CAPTION;\n        case 'ruby-base':\n            return DISPLAY.RUBY_BASE;\n        case 'ruby-text':\n            return DISPLAY.RUBY_TEXT;\n        case 'ruby-base-container':\n            return DISPLAY.RUBY_BASE_CONTAINER;\n        case 'ruby-text-container':\n            return DISPLAY.RUBY_TEXT_CONTAINER;\n        case 'contents':\n            return DISPLAY.CONTENTS;\n        case 'inline-block':\n            return DISPLAY.INLINE_BLOCK;\n        case 'inline-list-item':\n            return DISPLAY.INLINE_LIST_ITEM;\n        case 'inline-table':\n            return DISPLAY.INLINE_TABLE;\n        case 'inline-flex':\n            return DISPLAY.INLINE_FLEX;\n        case 'inline-grid':\n            return DISPLAY.INLINE_GRID;\n    }\n\n    return DISPLAY.NONE;\n};\n\nvar setDisplayBit = function setDisplayBit(bit, display) {\n    return bit | parseDisplayValue(display);\n};\n\nvar parseDisplay = exports.parseDisplay = function parseDisplay(display) {\n    return display.split(' ').reduce(setDisplayBit, 0);\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}